<?php
class RegisterController extends Control
{
	public function __construct($params = null)
	{
		parent::loadParamMap(array( 'post' => true), $params);
		if (parent::getParam('post') && Session::isLoggedIn() && isset($_POST['uname'])) {
			header('Content-type: text/plain');
			echo 'ok';
			exit;
		}
		else if(Session::isLoggedIn())
		{
			header('Location: ' . '/');
		}
		else if (parent::getParam('post') && isset($_POST['uname']) && isset($_POST['scaptcha']))
		{
			/////////////////////////////////////////////////////////////////////////
			// THIS IS A SHITTY WAY TO AVOID BRUTEFORCE, PLEASE REWRITE DIS SHIT.
			/////////////////////////////////////////////////////////////////////////
			$_SESSION['LREG_POST_COUNT'] = intval(@$_SESSION['LREG_POST_COUNT']) + 1;
			if(!isset($_SESSION['LREG_POST_LAST'])) {
				$_SESSION['LREG_POST_LAST'] = time();
			}
			else if(intval($_SESSION['LREG_POST_LAST']) > intval(time() - 20) // Menos de 20 segundos atrÃ¡s
							&& $_SESSION['LREG_POST_COUNT'] >= 25) // 25 ou mais tentativas de post
			{
				exit;
			}
			else if(intval($_SESSION['LREG_POST_LAST']) <= intval(time() - 600)) {
				$_SESSION['LREG_POST_COUNT'] = 1;
			}
			$_SESSION['LREG_POST_LAST'] = time();
			/////////////////////////////////////////////////////////////////////////

			// Yeah, with error suppressors
			$uName = escape(@$_POST['uname']);
			$uMail = escape(@$_POST['umail']);
			$uMailConfirm = escape(@$_POST['umail2']);
			$uPwd = escape(@$_POST['upwd']);
			$uPwdConfirm = escape(@$_POST['upwd2']);
			$sCaptcha = intval($_POST['scaptcha']);

			// 0, 1 or ok
			// Should i give less info? (like only 1 or 0)
			$result = array(
				'uname' => '0',
				'upwd' => '0',
				'upwd2' => '0',
				'umail' => '0',
				'umail2' => '0',
				'scaptcha' => '0'
			);
			if(!isset($_SESSION['CAPTCHA_RESPONSE']) || $sCaptcha != $_SESSION['CAPTCHA_RESPONSE']) {
				$result['scaptcha'] = '0';
			}
			else {
				$result['scaptcha'] = 'ok';
			}

			# USERNAME
			if(!preg_match('/^[0-9a-zA-Z_.-]+$/', $uName) || strlen($uName) <= 2) {
				$result['uname'] = '0'; // Invalid username
			}
			else if(UserData::isLinkrUsername($uName)) {
				$result['uname'] = '1'; // Already used
			}
			else if(preg_match('/^[0-9a-zA-Z_.-]+$/', $uName) && !UserData::isLinkrUsername($uName) && strlen($uName) >= 3) {
				$result['uname'] = 'ok'; // Is valid and is not in use
			}

			# EMAIL
			if(!filter_var($uMail, FILTER_VALIDATE_EMAIL)) {
				$result['umail'] = '0'; // Invalid Email
			}

			else if(UserData::isLinkrMail($uMail)) {
				$result['umail'] = '1'; // Already used
			}

			else if(filter_var($uMail, FILTER_VALIDATE_EMAIL) && !UserData::isLinkrMail($uMail)) {
				$result['umail'] = 'ok'; // Is valid and is not in use
			}

			if($uMail != $uMailConfirm) {
				$result['umail2'] = '0'; // Emails don't match
			}
			else if($result['umail'] != 'ok') {
				$result['umail2'] = '1'; // Emails match, but it's not 'ok'
			}
			else if($uMail == $uMailConfirm && $result['umail'] == 'ok') {
				$result['umail2'] = 'ok'; // Match and ok
			}

			# PASSWORD
			if (strlen($uPwd) != 64) {
				$result['upwd'] = '0'; // Invalid pwd (len < 6 or invalid post)
			}
			else {
				$result['upwd'] = 'ok'; // It's (probably) a valid SHA3-256 Hash generated by us.
			}
			if ($uPwd != $uPwdConfirm) {
				$result['upwd2'] = '0'; // Pwds don't match
			}
			else if ($result['upwd'] != 'ok') {
				$result['upwd2'] = '1'; // Pwds match, but it's not 'ok'
			}
			else if ($uPwd == $uPwdConfirm && $result['upwd'] == 'ok') {
				$result['upwd2'] = 'ok'; // Match and ok
			}


			# LAST CHECK AND REGISTER!
			if($result['scaptcha'] == 'ok' && $result['uname'] == 'ok' && $result['umail'] == 'ok' && $result['umail2'] == 'ok' &&
				$result['upwd'] == 'ok' && $result['upwd2'] == 'ok')
			{
				$activationKey = UserData::registerNewUser($uName, $uMail, $uPwd);
				if(Session::buildUserSession($uName, $uPwd)){
					MailLib::sendMail('ConfirmEmail', 'Confirme a sua conta do Linkr, '.$uName.'!',
					$uMail, $uName,
					array('Today' => date("d/m/Y"),
						  'UserName' => $uName,
						  'ConfirmLink' => 'http://'.Core::readConfig('SITE/DOMAIN').'/confirm?k='. $activationKey//$this->userData->setPendingMail()
						  ), 'account-confirm');
					header('Content-type: text/plain');
					print('ok');
					exit;
				}
			}
			header('Content-type: application/json');
			//var_dump(Session::isLoggedIn());
			print(json_encode($result));
		}
		else
		{
				$this->Tpl = new Template('Register');
				//$this->Tpl->SetLabel('PageTitle', '/ Home');
				$this->Tpl->SetLabelWithPart('TopBar', 'TopBar.Guest');
				$this->Tpl->SetLabel('PageTitle', 'Criar uma conta -');
				//$this->Tpl->SetLabelWithPart('TopBar', 'TopBar.User');
				$this->Tpl->WriteOutput();
		}
		exit;
		/*
							if(Session::isLoggedIn()){
				header('Content-type: text/plain');
				echo 'logged';
			}
		*/
	}
}
